{"version":3,"sources":["components/Home/click_me.png","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","class","href","alt","id","src","require","width","height","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2JAAAA,EAAOC,QAAU,IAA0B,sC,+FC4D5BC,MA1Df,WACE,OACE,yBAAKC,MAAM,WACH,gDAGJ,yBAAKA,MAAM,UACP,uBAAGA,MAAM,WAAWC,KAAK,0CAAzB,YACA,uBAAGD,MAAM,SAASC,KAAK,kDAAkDC,IAAI,MAA7E,aACA,uBAAGF,MAAM,SAASC,KAAK,4CAA4CC,IAAI,MAAvE,YAGI,6BACA,6BACJ,yBAAKC,GAAG,UACJ,yBAAKH,MAAM,UACP,wBAAIG,GAAG,QAAP,yCACA,wBAAIA,GAAG,QAAP,kFAGJ,6BACA,yBAAKH,MAAM,OACP,uBAAGC,KAAK,mDAAkD,yBAAKG,IAAKC,EAAQ,GAAmBC,MAAM,MAAMC,OAAO,MAAML,IAAI,QAEhI,6BACA,6BAEA,yBAAKF,MAAM,MAAX,IAAiB,uBAAGG,GAAG,QAAN,6PAIjB,6BACI,yBAAKH,MAAM,MACP,4BACI,wBAAIG,GAAG,QAAP,uEACA,wBAAIA,GAAG,QAAP,6EACA,wBAAIA,GAAG,QAAP,iGACA,wBAAIA,GAAG,QAAP,gHACA,wBAAIA,GAAG,QAAP,uDAGR,6BACA,yBAAKH,MAAM,MAAX,IAAiB,uBAAGG,GAAG,QAAN,qmBAS3B,mC,MCzCKK,MARf,WACE,OACE,yBAAKC,UAAU,OACd,kBAAC,EAAD,QCKeC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d6945c87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click_me.a3c40069.png\";","import React from \"react\";\r\nimport './Home.css'\r\nfunction Home() {\r\n  return (\r\n    <div class=\"bg-text\">\r\n            <header>\r\n            Jacob Carver\r\n        </header>\r\n        <div class=\"topnav\">\r\n            <a class=\"inactive\" href=\"https://jake10693.github.io/Portfolio/\">About Me</a>\r\n            <a class=\"active\" href=\"https://jake10693.github.io/Portfolio-Websites/\" alt=\"pw\">Portfolio</a>\r\n            <a class=\"active\" href=\"https://jake10693.github.io/Contact-Info/\" alt='ci'>Contact</a>\r\n        </div>\r\n        \r\n                <br/>\r\n                <hr/>\r\n            <div id=\"center\">\r\n                <div class=\"header\">\r\n                    <h2 id=\"text\">Hello, I'm a Full-Stack Web Developer</h2>\r\n                    <h3 id=\"text\">I create fully responsive and dynamic websites with stunning user interfaces.</h3>\r\n                    \r\n                </div>   \r\n                <br/>     \r\n                <div class=\"pic\">\r\n                    <a href=\"https://jake10693.github.io/Portfolio-Websites/\"><img src={require(\"./click_me.png\")} width=\"200\" height=\"150\" alt=\" \"></img></a>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n               \r\n                <div class=\"p1\"> <p id=\"text\">I am 26 years old and am currently working as well as self-emplowed as a personal trainer. I am looking for a career change to both stabalize my time spent working and the my income. \r\n                   web development suits my interests and personality in many ways: </p>\r\n                </div>\r\n               \r\n                <br/>\r\n                    <div class=\"p1\">  \r\n                        <ul>\r\n                            <li id=\"text\">I'v always wanted to have the opportunity to work from my computer.</li>\r\n                            <li id=\"text\">I can work in a field that requires or at least allows a creative aspect.</li>\r\n                            <li id=\"text\">I'm intrigued by how limitless the possibilties are for what kind of software can be created.</li>\r\n                            <li id=\"text\">The ability to work remotely will allow me to do the one thing that I've always wanted, to travel the world.</li>\r\n                            <li id=\"text\">It has an endless opportunity for freelance jobs.</li>\r\n                        </ul> \r\n                    </div>\r\n                    <br/>\r\n                    <div class=\"p1\"> <p id=\"text\">Quite frankly, I could easily write a daily blog going on-and-on about all the in-depth reasons why I am so\r\n                        passionate about it (In fact, I think I just found my next project).\r\n                        But moving on from my career, I really enjoy having deep conversations 1-on-1 with people. I find small talk\r\n                        to be redundant an and pointless. I'm always up for an adventure and a new experience. If there is anything\r\n                        I've learned in my 26 years of existence, it's that life is short and not worth wasting on meaningless\r\n                        encounters/experiences.\r\n                        Life is only worth living if it's to the fullest, and I intend to continue doing that.</p>\r\n                    </div>\r\n            </div>\r\n          <footer>\r\n\r\n          </footer>\r\n    </div>   \r\n  )\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from './components/Home/Home'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}