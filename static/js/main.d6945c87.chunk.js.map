{"version":3,"sources":["components/Home/click_me.png","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","class","href","alt","id","src","require","width","height","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2JAAAA,EAAOC,QAAU,IAA0B,sC,+FC4D5BC,MA1Df,WACE,OACE,yBAAKC,MAAM,WACH,gDAGJ,yBAAKA,MAAM,UACP,uBAAGA,MAAM,WAAWC,KAAK,0CAAzB,YACA,uBAAGD,MAAM,SAASC,KAAK,kDAAkDC,IAAI,MAA7E,aACA,uBAAGF,MAAM,SAASC,KAAK,4CAA4CC,IAAI,MAAvE,YAGI,6BACA,6BACJ,yBAAKC,GAAG,UACJ,yBAAKH,MAAM,UACP,wBAAIG,GAAG,QAAP,yCACA,wBAAIA,GAAG,QAAP,kFAGJ,6BACA,yBAAKH,MAAM,OACP,uBAAGC,KAAK,mDAAkD,yBAAKG,IAAKC,EAAQ,GAAmBC,MAAM,MAAMC,OAAO,MAAML,IAAI,QAEhI,6BACA,6BAEA,yBAAKF,MAAM,MAAX,IAAiB,uBAAGG,GAAG,QAAN,6PAIjB,6BACI,yBAAKH,MAAM,MACP,4BACI,wBAAIG,GAAG,QAAP,uEACA,wBAAIA,GAAG,QAAP,6EACA,wBAAIA,GAAG,QAAP,iGACA,wBAAIA,GAAG,QAAP,gHACA,wBAAIA,GAAG,QAAP,uDAGR,6BACA,yBAAKH,MAAM,MAAX,IAAiB,uBAAGG,GAAG,QAAN,qmBAS3B,mC,MCzCKK,MARf,WACE,OACE,yBAAKC,UAAU,OACd,kBAAC,EAAD,QCKeC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d6945c87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click_me.a3c40069.png\";","import React from \"react\";\nimport './Home.css'\nfunction Home() {\n  return (\n    <div class=\"bg-text\">\n            <header>\n            Jacob Carver\n        </header>\n        <div class=\"topnav\">\n            <a class=\"inactive\" href=\"https://jake10693.github.io/Portfolio/\">About Me</a>\n            <a class=\"active\" href=\"https://jake10693.github.io/Portfolio-Websites/\" alt=\"pw\">Portfolio</a>\n            <a class=\"active\" href=\"https://jake10693.github.io/Contact-Info/\" alt='ci'>Contact</a>\n        </div>\n        \n                <br/>\n                <hr/>\n            <div id=\"center\">\n                <div class=\"header\">\n                    <h2 id=\"text\">Hello, I'm a Full-Stack Web Developer</h2>\n                    <h3 id=\"text\">I create fully responsive and dynamic websites with stunning user interfaces.</h3>\n                    \n                </div>   \n                <br/>     \n                <div class=\"pic\">\n                    <a href=\"https://jake10693.github.io/Portfolio-Websites/\"><img src={require(\"./click_me.png\")} width=\"200\" height=\"150\" alt=\" \"></img></a>\n                </div>\n                <br/>\n                <br/>\n               \n                <div class=\"p1\"> <p id=\"text\">I am 26 years old and am currently working as well as self-emplowed as a personal trainer. I am looking for a career change to both stabalize my time spent working and the my income. \n                   web development suits my interests and personality in many ways: </p>\n                </div>\n               \n                <br/>\n                    <div class=\"p1\">  \n                        <ul>\n                            <li id=\"text\">I'v always wanted to have the opportunity to work from my computer.</li>\n                            <li id=\"text\">I can work in a field that requires or at least allows a creative aspect.</li>\n                            <li id=\"text\">I'm intrigued by how limitless the possibilties are for what kind of software can be created.</li>\n                            <li id=\"text\">The ability to work remotely will allow me to do the one thing that I've always wanted, to travel the world.</li>\n                            <li id=\"text\">It has an endless opportunity for freelance jobs.</li>\n                        </ul> \n                    </div>\n                    <br/>\n                    <div class=\"p1\"> <p id=\"text\">Quite frankly, I could easily write a daily blog going on-and-on about all the in-depth reasons why I am so\n                        passionate about it (In fact, I think I just found my next project).\n                        But moving on from my career, I really enjoy having deep conversations 1-on-1 with people. I find small talk\n                        to be redundant an and pointless. I'm always up for an adventure and a new experience. If there is anything\n                        I've learned in my 26 years of existence, it's that life is short and not worth wasting on meaningless\n                        encounters/experiences.\n                        Life is only worth living if it's to the fullest, and I intend to continue doing that.</p>\n                    </div>\n            </div>\n          <footer>\n\n          </footer>\n    </div>   \n  )\n};\n\nexport default Home;","import React from 'react';\nimport Home from './components/Home/Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}